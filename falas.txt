=== ROTEIRO DE APRESENTAÇÃO (10 minutos) ===

[SLIDE: Título - 30s]
Luis: "Bom dia a todos. Hoje apresentaremos nosso trabalho sobre Simulação de Ondas e Oceano, uma área fascinante que une física, matemática e computação gráfica. Sou Luis Felipe, e junto comigo está Antoniel Magalhães."

[SLIDE: Agenda - 15s]
Antoniel: "Vamos explorar como transformar equações matemáticas complexas em simulações visuais realistas de ondas oceânicas, focando na implementação prática usando técnicas modernas de computação gráfica."

[SLIDE: Introdução - 45s]
Luis: "A simulação de ondas e oceano é um desafio que requer um equilíbrio entre precisão física e eficiência computacional. Em jogos e efeitos visuais, precisamos criar ondas que pareçam realistas mas possam ser renderizadas em tempo real. Em aplicações científicas, como previsões meteorológicas, o foco está na precisão física das simulações."

[SLIDE: Teoria Linear - 1min]
Antoniel: "A Teoria Linear de Ondas, desenvolvida por Airy, é nossa base matemática. Ela descreve ondas como uma superposição de ondas sinusoidais simples. Cada onda é caracterizada por sua amplitude, comprimento de onda e frequência. Esta abordagem nos permite decompor padrões complexos de ondas em componentes mais simples que podemos simular individualmente."

[SLIDE: Pressupostos da Teoria Linear - 45s]
Luis: "Para tornar a simulação viável computacionalmente, fazemos algumas simplificações importantes. Tratamos a água como um fluido ideal - sem viscosidade e incompressível. Isso significa que podemos usar equações mais simples para o movimento, focando nos aspectos visualmente mais importantes como a forma da superfície e o movimento das ondas."

[SLIDE: Equação de Laplace - 1min 30s]
Antoniel: "A equação de Laplace, ∇²φ = 0, é fundamental em nossa simulação. O φ representa o potencial de velocidade, que determina como cada partícula de água se move. As condições de contorno são cruciais: a condição cinemática, ∂η/∂t = ∂φ/∂z, garante que a água se mova com a superfície, enquanto a condição dinâmica, ∂φ/∂t + gη = 0, relaciona a pressão com a altura da onda."

[SLIDE: Solução da Equação de Laplace - 1min]
Luis: "A solução matemática nos dá esta equação para o potencial de velocidade. O termo cosh[k(h+z)]/cosh(kh) descreve como o movimento diminui com a profundidade. A amplitude H controla a altura da onda, ω sua velocidade de oscilação, e k determina o comprimento da onda. Na prática, ajustamos estes parâmetros para criar diferentes tipos de ondas, de ondulações suaves a ondas mais agitadas."

[SLIDE: Aspectos Computacionais - 1min]
Antoniel: "Na implementação, discretizamos a superfície da água em uma malha de pontos. Para cada ponto, calculamos sua altura usando η(x,t) = H/2 * cos(kx-ωt). A relação de dispersão ω² = gk*tanh(kh) garante que ondas de diferentes comprimentos se movam com velocidades fisicamente corretas. Isso é especialmente importante para criar padrões realistas de interferência entre ondas."

[SLIDE: Implementação em JavaScript - 1min 30s]
Luis: "Aqui temos uma implementação prática em JavaScript. Nossa classe OceanWaveSimulator cria uma malha de vértices e a atualiza a cada frame. Usamos as equações de Gerstner para criar ondas mais realistas - elas não são perfeitamente sinusoidais, mas têm cristas mais afiadas e vales mais suaves, como ondas reais. O método calculateNormals é crucial para a iluminação realista da superfície."

[SLIDE: Técnicas de Renderização - 1min]
Antoniel: "Para o realismo visual, implementamos três efeitos principais: normal mapping para os detalhes da superfície, que cria a aparência de pequenas ondulações; o efeito Fresnel, que calcula reflexões dependentes do ângulo de visão; e caustics, que simulam os padrões de luz no fundo do oceano. O vetor de velocidade que calculamos também é usado para gerar espuma nas cristas das ondas."

[SLIDE: Otimizações e Performance - 45s]
Luis: "Para manter a performance em tempo real, usamos Level of Detail - reduzindo a densidade da malha em áreas distantes - e Fast Fourier Transform para sintetizar padrões complexos de ondas eficientemente. A FFT nos permite combinar múltiplas ondas sem calcular cada uma individualmente, reduzindo drasticamente o custo computacional."

[SLIDE: Referências - 30s]
Antoniel: "Concluímos nossa apresentação. Como vimos, a chave para uma simulação convincente está em traduzir a teoria matemática em código eficiente, mantendo os aspectos visualmente importantes enquanto simplificamos os cálculos onde possível."

=== NOTAS IMPORTANTES PARA OS APRESENTADORES ===

- Mantenham contato visual com a audiência
- Ao explicar equações, foquem no significado físico e visual de cada termo
- Usem gestos para ilustrar conceitos como movimento de ondas e interferência
- Estejam preparados para explicar como cada parte do código se relaciona com a teoria
- Pratiquem a pronúncia dos termos técnicos e matemáticos
- Mantenham um ritmo constante, especialmente nas partes mais técnicas
- Usem o código JavaScript como exemplo prático de como a teoria é implementada 